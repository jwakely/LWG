# A workflow to check generating the HTML lists works.
# The pages generated by this will have incorrect "Last modified" dates
# for the issues, because there is no meta-date/dates file used here.
# That's OK, because this is just a quick check to ensure that the XML
# is well-formed and the lists can be generated, suitable for checking
# pull requests are OK to merge.

name: Generate HTML issues for a pull request

on:
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Compile binary programs
      run: make pgms

    # This avoids fetching the full git history, because it's slow.
    - name: Extract issue timestamps from published files
      run: |
        git fetch --depth=1 origin gh-pages
        git worktree add gh-pages FETCH_HEAD
        rm -f meta-data/dates
        for i in gh-pages/issue[0-9]*.html ; do
          n="${i#gh-pages/issue}" ; n="${n%.html}" ;
          date=`sed -n 's;^.*Last modified:</b> \(....-..-..\)</p>$;\1;p' $i`
          date "+$n %s" -d "$date" >> meta-data/dates
        done

    - name: Generate HTML lists
      run: make lists

    - name: Package changed files
      run: |
        cp mailing/issue*.html gh-pages/
        mkdir html
        git -C gh-pages add issue*.html
        git -C gh-pages diff --cached --name-only | while read f ; do
          cp gh-pages/$f html
        done

    - name: Upload new HTML files for inspection
      uses: actions/upload-artifact@v4
      with:
        name: pull-${{ github.event.number }}-html
        path: html/issue*.html
        retention-days: 7

    - name: Check source code changes
      continue-on-error: true
      run: |
        git fetch --depth 2 origin master
        make check-source-changes -j4
